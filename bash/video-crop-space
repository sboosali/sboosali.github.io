#!/bin/bash

set -e
#set -u

##################################################

HELP="««« $(basename $0) VIDEO_FILE START_TIME_SECONDS [END_TIME_SECONDS] »»»"

##################################################


VIDEO="${1:?$HELP}"

START_TIME="${2:?$HELP}"
END_TIME="${3:?$HELP}"

##################################################

OUTPUT="/tmp/$(readlink -f ${VIDEO})"

##################################################

echo ==================================================
echo

echo "${VIDEO}"
echo "${START_TIME}"
echo "${END_TIME}"

##################################################

echo ==================================================
echo

ffmpeg  -i videos/pitbull-lullaby.mp4  -filter:v crop="in_w:in_h-40:0:0" 



##################################################

echo ==================================================
echo

echo "${OUTPUT}"

echo
echo ==================================================

##################################################

#ffmpeg  -i "${VIDEO}"  -ss 00:00:03  -t 00:00:08  -async 1  "${OUTPUT}"
#ffmpeg  -i "${VIDEO}"  -ss "${START_TIME}"  -t "${END_TIME}"  -async 1  "${OUTPUT}"
#if [ -f "${OUTPUT}" ]; then rm "${OUTPUT}"; fi

##################################################

# $ man ffmpeg
#
#        -i url (input)
#            input file url
#
#        -y (global)
#            Overwrite output files without asking.
#
#        -codec[:stream_specifier] codec (input/output,per-stream)
#            Select an encoder (when used before an output file) or a decoder (when used
#            before an input file) for one or more streams. codec is the name of a
#            decoder/encoder or a special value "copy" (output only) to indicate that the
#            stream is not to be re-encoded.
#
#            For example
#
#                    ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT
#
#            encodes all video streams with libx264 and copies all audio streams.
#
#

##################################################